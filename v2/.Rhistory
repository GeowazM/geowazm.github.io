if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Rsamtools")
source("http://www.bioconductor.org/biocLite.R")
install.packages("BiocManager")
library(BiocManager)
biocLite(c("Rsamtools")
biocLite(c("Rsamtools"))
biocLite(c("Rsamtools"))
BiocManager::install("Rsamtools")
library(Rsamtools)
file <- 'C:/data/SANDBOX/sequence_alignment/KremsWA3.bam'
bam <- scanBam(file)
View(bam)
#names of the BAM fields
names(bam[[1]])
# [1] "qname"  "flag"   "rname"  "strand" "pos"    "qwidth" "mapq"   "cigar"
# [9] "mrnm"   "mpos"   "isize"  "seq"    "qual"
#distribution of BAM flags
table(bam[[1]]$flag)
#      0       4      16
#1472261  775200 1652949
#function for collapsing the list of lists into a single list
#as per the Rsamtools vignette
.unlist <- function (x){
## do.call(c, ...) coerces factor to integer, which is undesired
x1 <- x[[1L]]
if (is.factor(x1)){
structure(unlist(x), class = "factor", levels = levels(x1))
} else {
do.call(c, x)
}
}
#store names of BAM fields
bam_field <- names(bam[[1]])
#go through each BAM field and unlist
list <- lapply(bam_field, function(y) .unlist(lapply(bam, "[[", y)))
#store as data frame
bam_df <- do.call("DataFrame", list)
names(bam_df) <- bam_field
dim(bam_df)
#[1] 3900410      13
View(bam_df)
View(bam_df)
View(bam)
